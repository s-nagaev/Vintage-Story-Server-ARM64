name: Build and Push Docker Image

on:
  schedule:
    - cron: "0 0 * * *"

  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Docker Builder
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get the latest stable version
      id: latest_version
      run: |
        VERSION=$(curl -s https://api.vintagestory.at/unstable.json | jq -r 'to_entries | map(select(.value.linuxserver.latest == 1)) | .[0].key')
        echo "Latest version is $VERSION"
        
        docker image inspect ${{ secrets.DOCKERHUB_REGISTRY }}:$VERSION > /dev/null 2>&1 || IMAGE_EXISTS="false"

        if [[ "$IMAGE_EXISTS" == "false" ]]; then
          echo "TAG=$VERSION" >> "$GITHUB_OUTPUT"
          echo "BUILD_NEEDED=true" >> "$GITHUB_ENV"
        else
          echo "The docker image for version $VERSION is already exists. No build needed."
          echo "BUILD_NEEDED=false" >> "$GITHUB_ENV"
        fi

    - name: Build and push Docker image
      if: env.BUILD_NEEDED == 'true'
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_REGISTRY }}:${{ steps.latest_version.outputs.TAG }}
        platforms: linux/arm64
        build-args: |
          VS_VERSION=${{ steps.latest_version.outputs.TAG }}
          VS_VERSION_TYPE=unstable
